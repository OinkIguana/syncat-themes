"import", "export", "from", "as",
named_imports > "{", named_imports > "}",
export_clause > "{", export_clause > "}",
"var", "let", "const", "class", "extends", "function", "=>",
"if", "else", "switch", "case", "default",
"break", "continue", "return",
"for", "while", "in", "of", "do",
"try", "catch", "finally", "throw",
"super", "constructor",
"with",
"async", "yield", "await",
{
  color: purple;
}

identifier /^[A-Z]/,
shorthand_property_identifier /^[A-Z]/,
property_identifier /^[A-Z]/,
export_specifier /^[A-Z]/,
call_expression /^[A-Z]/,
new_expression > identifier {
  color: yellow;
}

member_expression > property_identifier {
  color: cyan;
}

"=", "+=", "-=", "*=", "/=", "%=", "<<=", ">>=", "|=", "&=", "^=", "**=", "++", "--",
"+", "-", "*", "/", "**", "%", "^", "|", "&", "~", "<<", ">>",
"===", "!==", "==", "!=", "<=", ">=", "<", ">",
"&&", "||", "!",
"...",
subscript_expression > "[",
subscript_expression > "]",
"typeof", "instanceof", "new" {
  color: purple;
}

function > identifier,
generator_function > identifier,
method_definition > property_identifier,
call_expression > identifier,
call_expression > member_expression > property_identifier {
  color: blue;
}

array > "[",
array > "]",
identifier /^[A-Z_]+$/,
null, number, boolean  {
  color: red;
}

export_specifier,
object > shorthand_property_identifier,
object > pair > property_identifier {
  color: cyan;
}

template_string.,
string {
  color: green;
}

template_substitution > "${",
template_substitution > "}" {
  color: red;
}

regex > "/" {
  color: purple;
}

regex > regex_pattern {
  language: regex;
}

identifier > "global",
"this" {|
  color: cyan;
|}

identifier > "Math",
identifier > "JSON",
identifier > "document",
identifier > "module",
identifier > "console",
[> identifier "module"] > property_identifier "exports",
identifier > "window" {
  color: 12;
}

comment {|
  color: 15;
  italic: true;
|}

// JSX

jsx_opening_element > "<",
jsx_opening_element > ">",
jsx_closing_element > "<",
jsx_closing_element > "/",
jsx_opening_element > "<",
jsx_self_closing_element > "<",
jsx_self_closing_element > "/",
jsx_self_closing_element > ">" {
  color: purple;
}

jsx_opening_element > identifier /^[a-z]/,
jsx_closing_element > identifier /^[a-z]/,
jsx_self_closing_element > identifier /^[a-z]/ {
  color: red;
}

jsx_opening_element > identifier /^[A-Z]/,
jsx_closing_element > identifier /^[A-Z]/,
jsx_self_closing_element > identifier /^[A-Z]/ {
  color: yellow;
}

jsx_expression > "{",
jsx_expression > "}" {
  color: red;
}

jsx_attribute property_identifier {
  color: yellow;
}

jsx_text {
  color: green;
}
